jar {
    //rename the default output, for some better... sanity with scipts
    archiveName = "${baseName}-${version}.${extension}"

     manifest {
        attributes([
				'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}",
				'Timestamp': System.currentTimeMillis(),
				'Specification-Title': 'Exoplanets',
				'Specification-Vendor': 'ReadOnlyMods',
				'Specification-Version': '1',
				'Implementation-Title': project.archivesBaseName,
				'Implementation-Version': project.version,
				'Implementation-Vendor' :'ReadOnlyMods',
				'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
				'Built-On': "${project.forge_mc_version}-${project.forge_version}"
        ])
    }
}

ext.apiFiles = ['net/rom/api/**']
ext.coreFiles = ['net/rom/exoplanets/**']

task deobfJar(type: Jar) {

	outputs.upToDateWhen {false}
	description = 'Creates a JAR containing the non-obfuscated compiled code.'
	classifier = 'dev'
	from (sourceSets.main.output) {
		includes.addAll(project.ext.apiFiles)
		includes.addAll(project.ext.coreFiles)
	}
	from(sourceSets.main.java) {
		includes.addAll(project.ext.apiFiles)
		includes.addAll(project.ext.coreFiles)
	}
	manifest {
		  attributes([
				'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}:dev",
				'Timestamp': System.currentTimeMillis(),
				'Specification-Title': 'Exoplanets',
				'Specification-Vendor': 'ReadOnlyMods',
				'Specification-Version': '1',
				'Implementation-Title': project.name + '-dev',
				'Implementation-Version': project.version,
				'Implementation-Vendor' :'ReadOnlyMods',
				'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
				'Built-On': "${project.forge_mc_version}-${project.forge_version}"
				])
				
	}
}

task apiJar(type: Jar) {

	outputs.upToDateWhen {false}
	from (sourceSets.main.output) {
		includes.addAll(project.ext.apiFiles)
	}
	from(sourceSets.main.java) {
		includes.addAll(project.ext.apiFiles)
	}
	classifier = 'api'
	manifest {
		  attributes([
				'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}:api",
				'Timestamp': System.currentTimeMillis(),
				'Specification-Title': 'Exoplanets',
				'Specification-Vendor': 'ReadOnlyMods',
				'Specification-Version': '1',
				'Implementation-Title': project.name + '-api',
				'Implementation-Version': project.version,
				'Implementation-Vendor' :'ReadOnlyMods',
				'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
				'Built-On': "${project.forge_mc_version}-${project.forge_version}"
				])
	}
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
    	manifest {
		  attributes([
				'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}:api",
				'Timestamp': System.currentTimeMillis(),
				'Specification-Title': 'Exoplanets',
				'Specification-Vendor': 'ReadOnlyMods',
				'Specification-Version': '1',
				'Implementation-Title': project.name + '-api',
				'Implementation-Version': project.version,
				'Implementation-Vendor' :'ReadOnlyMods',
				'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
				'Built-On': "${project.forge_mc_version}-${project.forge_version}"
				])
	}
}

artifacts {
    archives sourcesJar
    archives deobfJar
    archives apiJar
}